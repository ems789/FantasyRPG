// <auto-generated />
using System;
using API_Game_Server.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Game_Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240518024128_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API_Game_Server.DataContext.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<int>("LoginProviderType")
                        .HasColumnType("int");

                    b.Property<string>("LoginProviderUserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("AccountId");

                    b.HasIndex("LoginProviderUserId", "LoginProviderType")
                        .IsUnique();

                    b.ToTable("Account");
                });

            modelBuilder.Entity("API_Game_Server.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("ActivePoint")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Gem")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("AccountId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("API_Game_Server.Models.UserInfo", b =>
                {
                    b.HasOne("API_Game_Server.DataContext.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
